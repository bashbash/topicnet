Shader{
	name = "vizpos_shade.shl",
	description = [[ test normal interpolation ]],
	language = "GLSL",
	
	parameters = {
		Parameter {
				1.,
				name = "radyus", type = "float",
				description = "radius",
		}
	},

--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Vertex Program
--------------------------------------------------------------------------
Program{
	type = "vertex",
	
	[[


varying vec3 N;
varying vec3 P;
varying vec3 texCoord;
uniform float radyus;


varying vec3 pos;


vec3 closestPoint(vec3 norm, vec3 start, vec3 point){
	vec3 v =  point - start;
	float dott = dot(norm, v); 
	vec3 res = norm * dott;
	return res;
}

vec3 siluetPoint( vec3 t1, vec3 c1, vec3 view, float sign) {
  
	vec3 p1 = closestPoint(t1, c1, view);
	vec3 u1 = p1 - view;
	
	vec3 y1 = normalize(cross(t1, u1));
	vec3 x1 = normalize(cross(t1, y1));
	
	
	float f1 = sqrt(1.0 - (radyus / length(u1)));
	
	
	vec3 ei = y1 * radyus;
	if(sign<0.0){
		ei = ei * -1.0;
	}
	vec3 siluet =  c1 + ei;

	
	float k = sqrt(1.0 - (f1*f1));
	vec3 nrm = (x1 * k);
	if(sign>0.0){
		nrm = nrm + (y1* f1);
	}
	else{
		nrm = nrm - (y1* f1);
	}
	
	N = nrm;
	return siluet; //returns the siluet point 
	
}

void main() {
	
	N = gl_NormalMatrix*normalize(gl_Normal);
	
	texCoord = vec3(gl_TextureMatrix[0] * gl_MultiTexCoord0);
	
	vec4 viewVec = vec4(0.0, 0.0, -1.0, 0.0);
	vec3 view = (gl_ModelViewMatrixInverseTranspose * viewVec).xyz;
	view= abs(view);
	
	pos = siluetPoint( gl_Normal.xyz, gl_Vertex.xyz, view, texCoord.x);
	
	vec4 vrt = vec4(pos, 1.0);
	
	P = (gl_ModelViewMatrix*vrt).xyz;
	gl_Position = gl_ModelViewProjectionMatrix * vrt; 
}

	]]
},
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--	Fragment Program
--------------------------------------------------------------------------
Program{
	type = "fragment",	--must be defined

	[[
	
varying vec3 pos;

void main() {

	
	gl_FragColor.rgb = pos;
	gl_FragColor.a = 1.;
	

	
}

	]],
},

--------------------------------------------------------------------------
}